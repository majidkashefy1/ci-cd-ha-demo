version: '3.9'

services:
  # --- App containers ---
  app1:
    #    build: ./app
    image: 01020majid/ci-cd-ha-demo:latest
    container_name: app1
    restart: always
    networks:
      - ha_net

  app2:
    #    build: ./app
    image: 01020majid/ci-cd-ha-demo:latest
    container_name: app2
    restart: always
    networks:
      - ha_net

  # --- Load balancer ---
  nginx:
    image: nginx:latest
    container_name: nginx-lb
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app1
      - app2
    restart: always
    networks:
      - ha_net

  # --- Prometheus (Metrics Collector) ---
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - ha_net
    restart: always

  # --- Grafana (Metrics Dashboard) ---
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - ha_net
    depends_on:
      - prometheus
    restart: always

  # --- Node Exporter (system metrics) ---
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - ha_net

  # --- Watchtower (auto-deploy) ---
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ha_net

networks:
  ha_net:
    driver: bridge